[{"E:\\Programming\\YandexPraktikum\\dev\\mesto-react\\src\\index.js":"1","E:\\Programming\\YandexPraktikum\\dev\\mesto-react\\src\\components\\App.jsx":"2","E:\\Programming\\YandexPraktikum\\dev\\mesto-react\\src\\components\\Header.jsx":"3","E:\\Programming\\YandexPraktikum\\dev\\mesto-react\\src\\components\\Footer.jsx":"4","E:\\Programming\\YandexPraktikum\\dev\\mesto-react\\src\\components\\Main.jsx":"5","E:\\Programming\\YandexPraktikum\\dev\\mesto-react\\src\\components\\PopupWithForm.jsx":"6","E:\\Programming\\YandexPraktikum\\dev\\mesto-react\\src\\components\\ImagePopup.jsx":"7","E:\\Programming\\YandexPraktikum\\dev\\mesto-react\\src\\components\\Card.jsx":"8","E:\\Programming\\YandexPraktikum\\dev\\mesto-react\\src\\utils\\Api.js":"9"},{"size":246,"mtime":1612340516852,"results":"10","hashOfConfig":"11"},{"size":5094,"mtime":1612457118346,"results":"12","hashOfConfig":"11"},{"size":302,"mtime":1612340516805,"results":"13","hashOfConfig":"11"},{"size":185,"mtime":1612361313414,"results":"14","hashOfConfig":"11"},{"size":2448,"mtime":1612362620034,"results":"15","hashOfConfig":"11"},{"size":758,"mtime":1612340516805,"results":"16","hashOfConfig":"11"},{"size":650,"mtime":1612340516805,"results":"17","hashOfConfig":"11"},{"size":943,"mtime":1612340516805,"results":"18","hashOfConfig":"11"},{"size":2982,"mtime":1612367535605,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1c53yda",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Programming\\YandexPraktikum\\dev\\mesto-react\\src\\index.js",[],["41","42"],"E:\\Programming\\YandexPraktikum\\dev\\mesto-react\\src\\components\\App.jsx",["43"],"import { useState } from 'react';\r\nimport '../index.css';\r\nimport Header from './Header.jsx';\r\nimport Main from './Main.jsx';\r\nimport Footer from './Footer.jsx';\r\nimport PopupWithForm from './PopupWithForm.jsx';\r\nimport ImagePopup from './ImagePopup.jsx';\r\n\r\nfunction App() {\r\n  {\r\n    /* Стейты и функции попапов */\r\n  }\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\r\n  const [isImagePopupOpen, setImagePopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard({\r\n      ...selectedCard,\r\n      link: card.link,\r\n      name: card.name,\r\n    });\r\n    setImagePopupOpen(true);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setEditProfilePopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setEditAvatarPopupOpen(false);\r\n    setImagePopupOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <Header />\r\n      <Main\r\n        onEditProfile={handleEditProfileClick}\r\n        onAddPlace={handleAddPlaceClick}\r\n        onEditAvatar={handleEditAvatarClick}\r\n        onCardClick={handleCardClick}\r\n      />\r\n      <Footer />\r\n\r\n      {/* Попап редактирования профиля */}\r\n      <PopupWithForm\r\n        name=\"profile\"\r\n        title=\"Редактировать профиль\"\r\n        buttonText=\"Сохранить\"\r\n        isOpen={isEditProfilePopupOpen}\r\n        onClose={closeAllPopups}\r\n      >\r\n        <fieldset name=\"user\" className=\"popup__info\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Имя\"\r\n            name=\"name\"\r\n            required=\"\"\r\n            minLength=\"2\"\r\n            maxLength=\"40\"\r\n            className=\"popup__input popup__input_type_name\"\r\n            id=\"profile-name-input\"\r\n          />\r\n          <span\r\n            className=\"popup__input-error\"\r\n            id=\"profile-name-input-error\"\r\n          ></span>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Род занятий\"\r\n            name=\"job\"\r\n            required=\"\"\r\n            minLength=\"2\"\r\n            maxLength=\"200\"\r\n            className=\"popup__input popup__input_type_occupation\"\r\n            id=\"profie-occupation-input\"\r\n          />\r\n          <span\r\n            className=\"popup__input-error\"\r\n            id=\"profie-occupation-input-error\"\r\n          ></span>\r\n        </fieldset>\r\n      </PopupWithForm>\r\n\r\n      {/* Попап добавления карточки */}\r\n      <PopupWithForm\r\n        name=\"card\"\r\n        title=\"Новое место\"\r\n        buttonText=\"Создать\"\r\n        isOpen={isAddPlacePopupOpen}\r\n        onClose={closeAllPopups}\r\n      >\r\n        <fieldset name=\"card\" className=\"popup__info\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Название\"\r\n            name=\"name\"\r\n            required=\"\"\r\n            minLength=\"2\"\r\n            maxLength=\"30\"\r\n            className=\"popup__input popup__input_type_title\"\r\n            id=\"card-title-input\"\r\n          />\r\n          <span\r\n            className=\"popup__input-error\"\r\n            id=\"card-title-input-error\"\r\n          ></span>\r\n          <input\r\n            type=\"url\"\r\n            placeholder=\"Ссылка на изображение\"\r\n            name=\"link\"\r\n            required=\"\"\r\n            className=\"popup__input popup__input_type_url\"\r\n            id=\"card-url-input\"\r\n          />\r\n          <span className=\"popup__input-error\" id=\"card-url-input-error\"></span>\r\n        </fieldset>\r\n      </PopupWithForm>\r\n\r\n      {/* Попап редактирования аватара */}\r\n      <PopupWithForm\r\n        name=\"avatar\"\r\n        title=\"Обновить аватар\"\r\n        buttonText=\"Сохранить\"\r\n        isOpen={isEditAvatarPopupOpen}\r\n        onClose={closeAllPopups}\r\n      >\r\n        <fieldset name=\"avatar\" className=\"popup__info\">\r\n          <input\r\n            type=\"url\"\r\n            placeholder=\"Ссылка на изображение\"\r\n            name=\"link\"\r\n            required=\"\"\r\n            className=\"popup__input popup__input_avatar popup__input_type_url\"\r\n            id=\"avatar-url-input\"\r\n          />\r\n          <span\r\n            className=\"popup__input-error\"\r\n            id=\"avatar-url-input-error\"\r\n          ></span>\r\n        </fieldset>\r\n      </PopupWithForm>\r\n\r\n      <ImagePopup\r\n        isOpen={isImagePopupOpen}\r\n        onClose={closeAllPopups}\r\n        card={selectedCard}\r\n      />\r\n\r\n      {/* Попап удаления карточки */}\r\n      <PopupWithForm name=\"remove\" title=\"Вы уверены?\" buttonText=\"Да\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\Programming\\YandexPraktikum\\dev\\mesto-react\\src\\components\\Header.jsx",[],"E:\\Programming\\YandexPraktikum\\dev\\mesto-react\\src\\components\\Footer.jsx",[],"E:\\Programming\\YandexPraktikum\\dev\\mesto-react\\src\\components\\Main.jsx",["44"],"import { useState, useEffect } from 'react';\r\nimport api from '../utils/Api.js';\r\nimport Card from './Card.jsx';\r\nimport avatar from '../images/Cousteau.jpg';\r\n\r\nfunction Main(props) {\r\n  {\r\n    /* Стейты и функции api */\r\n  }\r\n  const [userName, setUserName] = useState(null);\r\n  const [userDescription, setUserDescription] = useState(null);\r\n  const [userAvatar, setUserAvatar] = useState(null);\r\n  const [cards, setCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n      .then(([user, cards]) => {\r\n        setUserName(user.name);\r\n        setUserDescription(user.about);\r\n        setUserAvatar(user.avatar);\r\n        setCards(cards);\r\n      })\r\n      .catch((err) => console.log(`Ошибка: ${err}`));\r\n  }, []);\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"profile\">\r\n        <div className=\"profile__main\">\r\n          <button\r\n            aria-label=\"Изменить аватар\"\r\n            className=\"profile__avatar-edit\"\r\n            onClick={props.onEditAvatar}\r\n          >\r\n            <img\r\n              src={userAvatar ? userAvatar : avatar}\r\n              alt=\"Аватар пользователя\"\r\n              className=\"profile__avatar\"\r\n            />\r\n          </button>\r\n          <div className=\"profile__info\">\r\n            <div className=\"profile__user\">\r\n              <h1 className=\"profile__name\">\r\n                {userName ? userName : 'Жак-Ив Кусто'}\r\n              </h1>\r\n              <p className=\"profile__occupation\">\r\n                {userDescription ? userDescription : 'Исследователь океана'}\r\n              </p>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              aria-label=\"Редактировать профиль\"\r\n              className=\"profile__edit-button\"\r\n              onClick={props.onEditProfile}\r\n            ></button>\r\n          </div>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          aria-label=\"Добавить фотографию\"\r\n          className=\"profile__add-button\"\r\n          onClick={props.onAddPlace}\r\n        ></button>\r\n      </section>\r\n\r\n      <section className=\"cards\">\r\n        {cards.map((card) => {\r\n          return (\r\n            <Card key={card._id} card={card} onCardClick={props.onCardClick} />\r\n          );\r\n        })}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","E:\\Programming\\YandexPraktikum\\dev\\mesto-react\\src\\components\\PopupWithForm.jsx",[],"E:\\Programming\\YandexPraktikum\\dev\\mesto-react\\src\\components\\ImagePopup.jsx",[],"E:\\Programming\\YandexPraktikum\\dev\\mesto-react\\src\\components\\Card.jsx",[],"E:\\Programming\\YandexPraktikum\\dev\\mesto-react\\src\\utils\\Api.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":10,"column":3,"nodeType":"51","messageId":"52","endLine":12,"endColumn":4},{"ruleId":"49","severity":1,"message":"50","line":7,"column":3,"nodeType":"51","messageId":"52","endLine":9,"endColumn":4},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]