[{"E:\\1code\\mesto-react\\src\\index.js":"1","E:\\1code\\mesto-react\\src\\components\\App.jsx":"2","E:\\1code\\mesto-react\\src\\components\\PopupWithForm.jsx":"3","E:\\1code\\mesto-react\\src\\components\\Main.jsx":"4","E:\\1code\\mesto-react\\src\\components\\EditAvatarPopup.jsx":"5","E:\\1code\\mesto-react\\src\\components\\Header.jsx":"6","E:\\1code\\mesto-react\\src\\components\\ImagePopup.jsx":"7","E:\\1code\\mesto-react\\src\\components\\EditProfilePopup.jsx":"8","E:\\1code\\mesto-react\\src\\contexts\\CurrentUserContext.js":"9","E:\\1code\\mesto-react\\src\\components\\Footer.jsx":"10","E:\\1code\\mesto-react\\src\\utils\\Api.js":"11","E:\\1code\\mesto-react\\src\\components\\Card.jsx":"12"},{"size":246,"mtime":1613120430204,"results":"13","hashOfConfig":"14"},{"size":4600,"mtime":1613129128068,"results":"15","hashOfConfig":"14"},{"size":793,"mtime":1613125598299,"results":"16","hashOfConfig":"14"},{"size":2794,"mtime":1613382784262,"results":"17","hashOfConfig":"14"},{"size":1060,"mtime":1613370278355,"results":"18","hashOfConfig":"14"},{"size":302,"mtime":1613120430174,"results":"19","hashOfConfig":"14"},{"size":650,"mtime":1613120430175,"results":"20","hashOfConfig":"14"},{"size":2169,"mtime":1613370162729,"results":"21","hashOfConfig":"14"},{"size":90,"mtime":1613120476584,"results":"22","hashOfConfig":"14"},{"size":185,"mtime":1613120430174,"results":"23","hashOfConfig":"14"},{"size":3070,"mtime":1613382757772,"results":"24","hashOfConfig":"14"},{"size":1673,"mtime":1613120476583,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1b14l14",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"E:\\1code\\mesto-react\\src\\index.js",[],["53","54"],"E:\\1code\\mesto-react\\src\\components\\App.jsx",["55","56"],"import { useState, useEffect } from 'react';\r\nimport '../index.css';\r\nimport Header from './Header.jsx';\r\nimport Main from './Main.jsx';\r\nimport Footer from './Footer.jsx';\r\nimport PopupWithForm from './PopupWithForm.jsx';\r\nimport ImagePopup from './ImagePopup.jsx';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\nimport api from '../utils/Api.js';\r\nimport EditProfilePopup from './EditProfilePopup.jsx';\r\nimport EditAvatarPopup from './EditAvatarPopup.jsx';\r\n\r\nfunction App() {\r\n  {\r\n    /* Стейты и функции попапов */\r\n  }\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\r\n  const [isImagePopupOpen, setImagePopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard({\r\n      ...selectedCard,\r\n      link: card.link,\r\n      name: card.name,\r\n    });\r\n    setImagePopupOpen(true);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setEditProfilePopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setEditAvatarPopupOpen(false);\r\n    setImagePopupOpen(false);\r\n  }\r\n\r\n  {\r\n    /*Стейт пользователя*/\r\n  }\r\n\r\n  const [currentUser, setCurrentUser] = useState({\r\n    name: '',\r\n    about: '',\r\n    avatar: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    api.getUserInfo().then((user) => {\r\n      setCurrentUser(user);\r\n    });\r\n  }, []);\r\n\r\n  function handleUpdateUser(user) {\r\n    api\r\n      .setUserInfo(user)\r\n      .then(setCurrentUser)\r\n      .then(closeAllPopups)\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  function handleUpdateAvatar(user) {\r\n    api\r\n      .setNewAvatar(user)\r\n      .then(setCurrentUser)\r\n      .then(closeAllPopups)\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n        <Header />\r\n        <Main\r\n          onEditProfile={handleEditProfileClick}\r\n          onAddPlace={handleAddPlaceClick}\r\n          onEditAvatar={handleEditAvatarClick}\r\n          onCardClick={handleCardClick}\r\n        />\r\n        <Footer />\r\n\r\n        {/* Попап редактирования профиля */}\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n\r\n        {/* Попап добавления карточки */}\r\n        <PopupWithForm\r\n          name=\"card\"\r\n          title=\"Новое место\"\r\n          buttonText=\"Создать\"\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n        >\r\n          <fieldset name=\"card\" className=\"popup__info\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Название\"\r\n              name=\"name\"\r\n              required=\"\"\r\n              minLength=\"2\"\r\n              maxLength=\"30\"\r\n              className=\"popup__input popup__input_type_title\"\r\n              id=\"card-title-input\"\r\n            />\r\n            <span\r\n              className=\"popup__input-error\"\r\n              id=\"card-title-input-error\"\r\n            ></span>\r\n            <input\r\n              type=\"url\"\r\n              placeholder=\"Ссылка на изображение\"\r\n              name=\"link\"\r\n              required=\"\"\r\n              className=\"popup__input popup__input_type_url\"\r\n              id=\"card-url-input\"\r\n            />\r\n            <span\r\n              className=\"popup__input-error\"\r\n              id=\"card-url-input-error\"\r\n            ></span>\r\n          </fieldset>\r\n        </PopupWithForm>\r\n\r\n        {/* Попап редактирования аватара */}\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n\r\n        <ImagePopup\r\n          isOpen={isImagePopupOpen}\r\n          onClose={closeAllPopups}\r\n          card={selectedCard}\r\n        />\r\n\r\n        {/* Попап удаления карточки */}\r\n        <PopupWithForm name=\"remove\" title=\"Вы уверены?\" buttonText=\"Да\" />\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\1code\\mesto-react\\src\\components\\PopupWithForm.jsx",[],"E:\\1code\\mesto-react\\src\\components\\Main.jsx",["57"],"E:\\1code\\mesto-react\\src\\components\\EditAvatarPopup.jsx",[],"E:\\1code\\mesto-react\\src\\components\\Header.jsx",[],"E:\\1code\\mesto-react\\src\\components\\ImagePopup.jsx",[],"E:\\1code\\mesto-react\\src\\components\\EditProfilePopup.jsx",[],"E:\\1code\\mesto-react\\src\\contexts\\CurrentUserContext.js",[],"E:\\1code\\mesto-react\\src\\components\\Footer.jsx",[],"E:\\1code\\mesto-react\\src\\utils\\Api.js",["58"],"E:\\1code\\mesto-react\\src\\components\\Card.jsx",["59","60"],"import { useContext } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\nfunction Card(props) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n\r\n  {\r\n    /* Удаление */\r\n  }\r\n  const cardRemoveButtonClassName = `card__remove-button ${\r\n    isOwn ? 'card__remove-button_visible' : ''\r\n  }`;\r\n\r\n  {\r\n    /* Лайк */\r\n  }\r\n  const isLiked = props.card.likes.some((i) => i._id === currentUser._id);\r\n  const cardLikeButtonClassName = `card__like-button ${\r\n    isLiked ? 'card__like-button_active' : ''\r\n  }`;\r\n\r\n  function handleClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card);\r\n  }\r\n\r\n  return (\r\n    <article className=\"card\">\r\n      <button\r\n        type=\"button\"\r\n        className={cardRemoveButtonClassName}\r\n        aria-label=\"Удалить\"\r\n      ></button>\r\n      <div className=\"card__image-container\">\r\n        <img\r\n          src={props.card.link}\r\n          alt={props.card.name}\r\n          className=\"card__image\"\r\n          onClick={handleClick}\r\n        />\r\n      </div>\r\n      <div className=\"card__description\">\r\n        <h2 className=\"card__title\">{props.card.name}</h2>\r\n        <div className=\"card__like-container\">\r\n          <button\r\n            type=\"button\"\r\n            aria-label=\"Лайк\"\r\n            className={cardLikeButtonClassName}\r\n            onClick={handleLikeClick}\r\n          ></button>\r\n          <p className=\"card__like-count\">{props.card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":14,"column":3,"nodeType":"67","messageId":"68","endLine":16,"endColumn":4},{"ruleId":"65","severity":1,"message":"66","line":51,"column":3,"nodeType":"67","messageId":"68","endLine":53,"endColumn":4},{"ruleId":"65","severity":1,"message":"66","line":8,"column":3,"nodeType":"67","messageId":"68","endLine":10,"endColumn":4},{"ruleId":"69","severity":1,"message":"70","line":82,"column":5,"nodeType":"71","messageId":"72","endLine":82,"endColumn":26},{"ruleId":"65","severity":1,"message":"66","line":9,"column":3,"nodeType":"67","messageId":"68","endLine":11,"endColumn":4},{"ruleId":"65","severity":1,"message":"66","line":16,"column":3,"nodeType":"67","messageId":"68","endLine":18,"endColumn":4},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-global-assign","no-unsafe-negation"]